#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

old_domain=$YNH_APP_OLD_DOMAIN
old_path=$YNH_APP_OLD_PATH

new_domain=$YNH_APP_NEW_DOMAIN
new_path=$YNH_APP_NEW_PATH

app=$YNH_APP_INSTANCE_NAME

#=================================================
# LOAD SETTINGS
#=================================================

db_name=$(ynh_app_setting_get "$app" db_name)
db_pwd=$(ynh_app_setting_get "$app" mysqlpwd)
db_user="$db_name"
final_path=$(ynh_app_setting_get "$app" final_path)

#=================================================
# CHECK PATHS SYNTAX
#=================================================

test -n "$old_path" || old_path="/"
test -n "$new_path" || new_path="/"
new_path=$(ynh_normalize_url_path $new_path)
old_path=$(ynh_normalize_url_path $old_path)

#=================================================
# CHECK WHICH PARTS SHOULD BE CHANGED
#=================================================

change_domain=0
if [ "$old_domain" != "$new_domain" ]
then
	change_domain=1
fi

change_path=0
if [ "$old_path" != "$new_path" ]
then
	change_path=1
fi

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# MODIFY URL IN NGINX CONF FILE
#=================================================

nginx_conf_path=/etc/nginx/conf.d/$old_domain.d/$app.conf

# Change the path in the nginx config file
if [ $change_path -eq 1 ]
then
	domain="$old_domain"
	path_url="$new_path"
	ynh_add_nginx_config
	if [ "$path_url" = "/" ]
	then
	  # Replace "//" location (due to nginx template)
	  # Prevent from replacing in "http://" expressions by excluding ":" as preceding character
	  sed --in-place "s@\([^:]\)//@\1/@g" /etc/nginx/conf.d/$domain.d/$app.conf
	else
	  # Move prefix comment #for-subdir at end of lines
	  sed --in-place "s/#for-subdir\(.*\)/\1 #for-subdir/g" /etc/nginx/conf.d/$domain.d/$app.conf
	fi
	ynh_store_file_checksum "/etc/nginx/conf.d/$domain.d/$app.conf"
fi

# Change the domain for nginx
if [ $change_domain -eq 1 ]
then
  # Delete file checksum for the old conf file location
  ynh_delete_file_checksum "$nginx_conf_path"
  mv $nginx_conf_path /etc/nginx/conf.d/$new_domain.d/$app.conf
  # Store file checksum for the new config file location
  ynh_store_file_checksum "/etc/nginx/conf.d/$new_domain.d/$app.conf"
fi

#=================================================
# SPECIFIC MODIFICATIONS
#=================================================

# Configure Wallabag instance URL
ynh_mysql_connect_as "$db_name" "$db_pwd" "$db_user"  <<< "UPDATE craue_config_setting SET value = 'https://$new_domain$new_path' WHERE name = 'wallabag_url'"

# Change domain name in parameters.yml
ynh_replace_string "domain_name: https://$old_domain$old_path" "domain_name: https://$new_domain$new_path" $final_path/app/config/parameters.yml

# If "Download images locally" option has been enabled in Internal Settings
download_images_enabled=$(ynh_mysql_connect_as "$db_name" "$db_pwd" "$db_user"  <<<  "SELECT value from craue_config_setting WHERE name='download_images_enabled '" | tail -n 1)
if [ "$download_images_enabled" = "1" ] ; then
  echo "Updating images URL; this operation may take a while..."
  # Query/replace the domain/path in every entry.content in mysql database
  ynh_mysql_connect_as "$db_name" "$db_pwd" "$db_user"  <<< "UPDATE entry SET content = REPLACE(content, '$old_domain$old_path', '$new_domain$new_path');"
fi

# Clear assets cache
ynh_secure_remove $final_path/var/cache

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
